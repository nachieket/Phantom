/////////////////
// Services VPC
/////////////////


variable "services-Vpc-Name" {}

variable "services-Vpc-cidr" {}

variable "Services-a" {}

variable "Services-b" {}

variable "js_services_private_ip" {}


// Panorama Variables //


variable "panorama_version" {}

variable "panorama_license_type" {}

variable "panorama_instance_type" {}

variable "mgmtpanoramaip" {}

variable "panorama_name" {}


////////////////////////
// Services VPC Module
////////////////////////


module "services_vpc" {
  source = "../../modules/vpc/services-vpc"

  aws_region = var.aws_region
  access_key = var.access_key
  secret_key = var.secret_key
  aws_key = var.aws_key

  vpc_name = var.services-Vpc-Name
  vpc_cidr = var.services-Vpc-cidr

  Services-a = var.Services-a
  Services-b = var.Services-b

	ssh_private_ip = var.js_services_private_ip
}


////////////////////
// PANORAMA MODULE
////////////////////


////// Panorama Management SG //////


resource "aws_security_group" "panorama_management" {
  name = "${var.services-Vpc-Name}_panorama_mgmt_sg"
  vpc_id = module.services_vpc.vpc_id

  tags = {
    Name = "${var.services-Vpc-Name}_panorama_mgmt_sg"
  }
}

resource "aws_security_group_rule" "panorama_management_3978" {
  type = "ingress"
  security_group_id = aws_security_group.panorama_management.id

  from_port = 3978
  to_port = 3978
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "panorama_management_28443" {
  type = "ingress"
  security_group_id = aws_security_group.panorama_management.id

  from_port = 28443
  to_port = 28443
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "panorama_management_123" {
  type = "ingress"
  security_group_id = aws_security_group.panorama_management.id

  from_port = 123
  to_port = 123
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "panorama_management_22" {
  type = "ingress"
  security_group_id = aws_security_group.panorama_management.id

  from_port = 22
  to_port = 22
  protocol = "tcp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "panorama_management_443" {
  type = "ingress"
  security_group_id = aws_security_group.panorama_management.id

  from_port = 443
  to_port = 443
  protocol = "-1"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "panorama_management_icmp" {
  type = "ingress"
  security_group_id = aws_security_group.panorama_management.id

  from_port = -1
  to_port = -1
  protocol = "icmp"
  cidr_blocks = ["0.0.0.0/0"]
}

resource "aws_security_group_rule" "panorama_management_outbound" {
  type = "egress"
  security_group_id = aws_security_group.panorama_management.id

  from_port = 0
  to_port = 65535
  protocol = "-1"
  cidr_blocks = ["0.0.0.0/0"]
}

module "panorama" {
  source = "../../modules/panorama"

  aws_region = var.aws_region
  access_key = var.access_key
  secret_key = var.secret_key
  aws_key = var.aws_key

  mgmt_security_group_id = aws_security_group.panorama_management.id
  panorama_mgmt_subnet_id = module.services_vpc.Services-a_id
  mgmtpanoramaip = var.mgmtpanoramaip
  panorama_instance_type = var.panorama_instance_type
  panorama_name = var.panorama_name
  panorama_license_type = var.panorama_license_type
  panorama_license_type_map = var.panorama_license_type_map
  panorama_version = var.panorama_version
}

////////
// EIP
////////


resource "aws_eip" "mgmt_eip" {
  vpc               = true
  network_interface = module.panorama.panorama_mgmt_eni_id

  tags = {
    Name = "panorama_mgmt_eip"
  }
}